{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","hooks/useLocalStorage.js","index.js","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","form","this","label","input","type","pattern","title","required","onChange","formButton","require","Component","Filter","filterWrapper","ContactListItem","id","onDeleteContact","text","itemButton","onClick","ContactList","contacts","list","map","listItem","App","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","useLocalStorage","initialState","setContacts","filter","setFilter","data","some","alert","newContact","nanoid","lowerCaseFilter","toLowerCase","contact","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kaACAA,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,WAAa,kC,wJCCvH,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,4DCClBI,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMN,UAAWC,IAAEgB,KAAMF,SAAUG,KAAKN,aAAxC,UACE,wBAAOZ,UAAWC,IAAEkB,MAApB,iBAEE,uBACEnB,UAAWC,IAAEmB,MACbC,KAAK,OACLhB,KAAK,OACLK,MAAOQ,KAAKd,MAAMC,KAClBiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUP,KAAKX,kBAGnB,wBAAOP,UAAWC,IAAEkB,MAApB,mBAEE,uBACEnB,UAAWC,IAAEmB,MACbC,KAAK,MACLhB,KAAK,SACLK,MAAOQ,KAAKd,MAAME,OAClBgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUP,KAAKX,kBAInB,wBAAQP,UAAWC,IAAEyB,WAAYL,KAAK,SAAtC,gC,GArDcM,EAAQ,GAAtBC,W,gBCAO,SAASC,EAAT,GAAsC,IAApBnB,EAAmB,EAAnBA,MAAOe,EAAY,EAAZA,SACtC,OACE,qBAAKzB,UAAWC,IAAE6B,cAAlB,SACE,wBAAO9B,UAAWC,IAAEkB,MAApB,kCAEE,uBACEnB,UAAWC,IAAEmB,MACbC,KAAK,OACLX,MAAOA,EACPe,SAAUA,S,oBCRL,SAASM,EAAT,GAAiE,IAAtC1B,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,OAAQ0B,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,gBAC1D,OACE,qCACE,oBAAGjC,UAAWC,IAAEiC,KAAhB,UACG7B,EADH,KACWC,KAEX,wBACEN,UAAWC,IAAEkC,WACbd,KAAK,SACLe,QAAS,kBAAMH,EAAgBD,IAHjC,uB,oBCLS,SAASK,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,SAAUL,EAAmB,EAAnBA,gBAC9C,OACE,oBAAIjC,UAAWC,IAAEsC,KAAjB,SACGD,EAASE,KAAI,gBAAGR,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,oBAAIN,UAAWC,IAAEwC,SAAjB,SACE,cAACV,EAAD,CACE1B,KAAMA,EACNC,OAAQA,EACR0B,GAAIA,EACJC,gBAAiBA,KALWD,QCEzB,SAASU,IACtB,MCTa,SAAyBC,EAAKC,GAC3C,MAA0BC,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,KADzD,mBAAOxC,EAAP,KAAcO,EAAd,KAQA,OAJAwC,qBAAU,WACRH,OAAOC,aAAaG,QAAQT,EAAKG,KAAKO,UAAUjD,MAC/C,CAACuC,EAAKvC,IAEF,CAACA,EAAOO,GDAiB2C,CAAgB,WAAYC,GAA5D,mBAAOjB,EAAP,KAAiBkB,EAAjB,KACA,EAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KAmCA,OACE,eAAC5D,EAAD,WACE,2CACA,cAAC,EAAD,CAAaiB,SApCS,SAAA4C,GACxB,GAAIrB,EAASsB,MAAK,qBAAGvD,OAAoBsD,EAAKtD,QAC5CwD,MAAM,GAAD,OAAIF,EAAKtD,KAAT,kCAEA,GAAIiC,EAASsB,MAAK,qBAAGtD,SAAwBqD,EAAKrD,UACvDuD,MAAM,GAAD,OAAIF,EAAKrD,OAAT,iCADA,CAIP,IAAQD,EAAiBsD,EAAjBtD,KAAMC,EAAWqD,EAAXrD,OACRwD,EAAa,CACjB9B,GAAI+B,cACJ1D,OACAC,UAEFkD,GAAY,SAAAlB,GAAQ,OAAKwB,GAAL,mBAAoBxB,WAuBtC,0CACA,cAACT,EAAD,CAAQnB,MAAO+C,EAAQhC,SAjBN,SAAAjB,GACnBkD,EAAUlD,EAAMC,cAAcC,UAiB5B,cAAC2B,EAAD,CACEC,SAfqB,WACzB,IAAM0B,EAAkBP,EAAOQ,cAE/B,OAAO3B,EAASmB,QAAO,SAAAS,GAAO,OAC5BA,EAAQ7D,KAAK4D,cAAcE,SAASH,MAWxBI,GACVnC,gBAxBgB,SAAAoC,GACpBb,GAAY,SAAApD,GAAK,OAAIA,EAAMqD,QAAO,SAAAS,GAAO,OAAIA,EAAQlC,KAAOqC,c,YE1BhEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC9B,EAAD,MAEF+B,SAASC,eAAe,U,kBCT1B9E,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,MAAQ,sBAAsB,MAAQ,wB,kBCAtGD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,WAAa,sC,kBCApED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,iC","file":"static/js/main.c8015c93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__pGkKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Ku1_\",\"label\":\"ContactForm_label__3UXSP\",\"input\":\"ContactForm_input__1R2go\",\"formButton\":\"ContactForm_formButton__3rqzw\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import s from './ContactForm.module.css';\r\n\r\nconst { Component } = require('react');\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.itemButton}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from 'components/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport initialState from '../../data/contacts.json';\r\nimport Container from '../Container/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', initialState);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const formSubmitHandler = data => {\r\n    if (contacts.some(({ name }) => name === data.name)) {\r\n      alert(`${data.name} is already in contacts!`);\r\n      return;\r\n    } else if (contacts.some(({ number }) => number === data.number)) {\r\n      alert(`${data.number} is already in contacts!`);\r\n      return;\r\n    }\r\n    const { name, number } = data;\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n    setContacts(contacts => [newContact, ...contacts]);\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(state => state.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  const changeFilter = event => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(lowerCaseFilter),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList\r\n        contacts={getVisibleContacts()}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__GYdnB\",\"label\":\"Filter_label__21rZA\",\"input\":\"Filter_input__3z84R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactListItem_text__1b_93\",\"itemButton\":\"ContactListItem_itemButton__3Iptw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__sRBhm\",\"listItem\":\"ContactList_listItem__2k1mt\"};"],"sourceRoot":""}